#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
华为OD机试题：矩阵的最大值

题目描述：

给定一个仅包含0和1的n*n二维矩阵，请计算二维矩阵的最大值

计算规则如下：

每行元素按下标顺序组成一个二进制数(下标越大约排在低位)，二进制数的值就是该行的值，矩阵各行之和为矩阵的值。

允许通过向左或向右整体循环移动每个元素来改变元素在行中的位置。

比如：

[1,0,1,1,1] 向右整体循环移动两位 [1,1,1,0,1]，二进制数为11101 值为29
[1,0,1,1,1] 向左整体循环移动两位 [1,1,1,1,0]，二进制数为11110 值为30

输入描述：

数据的第一行为正整数，记录了N的大小，0<N<=20
输入的第2到n+1行为二维矩阵信息
行内元素边角逗号分割


输出描述：

矩阵的最大值


示例

输入：

5
1,0,0,0,1
0,0,0,1,1
0,1,0,1,0
1,0,0,1,1
1,0,1,0,1
输出：122
说明：

第一行向右整体循环移动一位，得到最大值 11000为24，依次循环，得到最大值122。
————————————————
版权声明：本文为CSDN博主「CoCo_2022」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/cxh21627/article/details/125002305
"""


def func(s: str):
    ls = s.split(',')
    ss = ''.join(ls)
    res = int(ss, 2)
    for i in range(1, len(ss)):
        res = max(res, int(ss[i:] + ss[:i], 2))
    return res


if __name__ == '__main__':
    n = int(input())
    sum = 0
    for _ in range(n):
        sum += func(input())
    print(sum)
